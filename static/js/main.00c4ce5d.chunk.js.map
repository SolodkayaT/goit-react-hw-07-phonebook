{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/SwitchTheme/SwitchTheme.module.css","components/App/App.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/Filter/Filter.module.css","components/Layout/Layout.module.css","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/ContactListButton/ContactListButton.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/context/themeContext.js","components/SwitchTheme/SwitchTheme.js","components/hok/withTheme.js","components/Layout/Layout.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","toLowerCase","getLoading","loading","getVisibleContacts","createSelector","contact","name","includes","getContactById","contactId","find","item","id","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","baseURL","addContact","number","dispatch","contactsActions","fetch","method","headers","Authorization","body","JSON","stringify","then","data","json","catch","error","fetchContacts","removeContact","result","ContactListButton","onRemoveContact","className","styles","contactButton","type","onClick","ContactListItem","keys","onRemove","contactItem","key","defaultProps","phone","connect","ownProps","contactsSelectors","contactsOperations","ContactList","isLoadingContacts","color","height","width","timeout","map","ContactForm","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","mapDispatchToProps","Filter","onChangeFilter","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","SwitchTheme","onToggleTheme","label","switch","checked","slider","withTheme","WrappedComponent","theme","toggleTheme","bind","newTheme","Provider","toggle","Consumer","style","background","children","App","onFetchContacts","section","title","createReducer","contactsAction","action","payload","combineReducers","getDefaultMD","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00c4ce5d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSelector\":\"SwitchTheme_themeSelector__1B8O8\",\"label\":\"SwitchTheme_label__WC0od\",\"switch\":\"SwitchTheme_switch__2BQnD\",\"slider\":\"SwitchTheme_slider__in4ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"section\":\"App_section__1zThd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout_body__2WDWT\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = state => state.contacts.items;\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter.toLowerCase();\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    return items.filter(contact => contact.name.toLowerCase().includes(filter));\n  }\n);\nconst getContactById = createSelector(\n  [(state, contactId) => contactId, getContacts],\n  (contactId, items) => items.find(item => item.id === contactId)\n);\n\nexport default {\n  getLoading,\n  getVisibleContacts,\n  getFilter,\n  getContactById\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst fetchContactRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactError = createAction(\"contacts/fetchError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeuccess\");\nconst removeContactError = createAction(\"contacts/removeError\");\n\nconst changeFilter = createAction(\"task/changeFilter\");\n\nexport default {\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  changeFilter\n};\n","import contactsActions from \"./contactsActions\";\nconst baseURL = \"https://goit-phonebook-api.herokuapp.com/v1\";\n//\"1474f3f5-f023-4759-aec0-68582b03d82b\"\n\nconst addContact = (name, number) => dispatch => {\n  dispatch(contactsActions.addContactRequest());\n  const contact = { name, number };\n  fetch(`${baseURL}/contacts`, {\n    method: \"POST\",\n    headers: {\n      Authorization: \"1474f3f5-f023-4759-aec0-68582b03d82b\",\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(contact)\n  })\n    .then(data => data.json())\n    .then(data => {\n      dispatch(contactsActions.addContactSuccess(data));\n    })\n    .catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactsActions.fetchContactRequest());\n  fetch(`${baseURL}/contacts`, {\n    method: \"GET\",\n    headers: { Authorization: \"1474f3f5-f023-4759-aec0-68582b03d82b\" }\n  })\n    .then(data => data.json())\n    .then(data => dispatch(contactsActions.fetchContactSuccess(data)))\n    .catch(error => contactsActions.fetchContactError(error));\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(contactsActions.removeContactRequest());\n  fetch(`${baseURL}/contacts/${id}`, {\n    method: \"DELETE\",\n    headers: { Authorization: \"1474f3f5-f023-4759-aec0-68582b03d82b\" }\n  })\n    .then(result => result.json())\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch(error => dispatch(contactsActions.fetchContactError(error)));\n};\n\nexport default { addContact, fetchContacts, removeContact };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={onRemoveContact}\n    >\n      Delete\n    </button>\n  );\n}\n\nContactListButton.propTypes = {\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport styles from \"./ContactListItem.module.css\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\n\nfunction ContactListItem({ name, number, keys, onRemove }) {\n  return (\n    <>\n      <li className={styles.contactItem} key={keys}>\n        <p>\n          {name} : {number}\n        </p>\n      </li>\n      <ContactListButton onRemoveContact={onRemove} />\n    </>\n  );\n}\n\nContactListItem.defaultProps = {\n  name: \"\",\n  phone: \"\",\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  keys: PropTypes.string,\n  onRemove: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = contactsSelectors.getContactById(state, ownProps.id);\n  return { ...item };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\n\nfunction ContactList({ contacts, isLoadingContacts }) {\n  return (\n    <>\n      {isLoadingContacts && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000} //3 secs\n        />\n      )}\n      <ul>\n        {contacts.map(({ id }) => (\n          <ContactListItem key={id} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: []\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getVisibleContacts(state),\n    isLoadingContacts: contactsSelectors.getLoading(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n            required\n          ></input>\n        </label>\n        <label className={styles.formLabel}>\n          Phone\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n            required\n          ></input>\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact\n};\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ value, onChangeFilter }) {\n  return (\n    <div>\n      <input\n        className={styles.filter}\n        type=\"text\"\n        value={value}\n        onChange={e => onChangeFilter(e.target.value)}\n      ></input>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\"\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\n\nexport const themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodyBg: \"white\"\n  },\n  dark: {\n    fontColor: \"white\",\n    bodyBg: \"black\"\n  }\n};\n\nconst ThemeContext = React.createContext(themeConfig);\nexport default ThemeContext;\n","import React from \"react\";\nimport styles from \"./SwitchTheme.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst SwitchTheme = ({ onToggleTheme }) => {\n  return (\n    <>\n      <span className={styles.label}>Theme</span>\n      <label className={styles.switch}>\n        <input\n          type=\"checkbox\"\n          checked={styles.checked}\n          onChange={e => onToggleTheme(e.target.value)}\n        />\n        <span className={styles.slider}></span>\n      </label>\n    </>\n  );\n};\nexport default SwitchTheme;\n\nSwitchTheme.propTypes = {\n  onToggleTheme: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport { themeConfig } from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n  return class withTheme extends Component {\n    constructor() {\n      super();\n      this.state = {\n        theme: \"light\"\n      };\n      this.toggleTheme = this.toggleTheme.bind(this);\n    }\n\n    toggleTheme(newTheme) {\n      this.setState({\n        theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\n      });\n    }\n\n    render() {\n      return (\n        <ThemeContext.Provider value={themeConfig[this.state.theme]}>\n          <WrappedComponent {...this.props} toggle={e => this.toggleTheme(e)} />\n        </ThemeContext.Provider>\n      );\n    }\n  };\n};\n\nexport default withTheme;\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport SwitchTheme from \"../SwitchTheme/SwitchTheme\";\nimport withTheme from \"../hok/withTheme\";\nimport styles from \"./Layout.module.css\";\n\nclass Layout extends Component {\n  render() {\n    return (\n      <>\n        <ThemeContext.Consumer>\n          {theme => (\n            <div\n              className={styles.body}\n              style={{ color: theme.fontColor, background: theme.bodyBg }}\n            >\n              {this.props.toggle && (\n                <SwitchTheme onToggleTheme={e => this.props.toggle(e)} />\n              )}\n              {this.props.children}\n            </div>\n          )}\n        </ThemeContext.Consumer>\n      </>\n    );\n  }\n}\n\nexport default withTheme(Layout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport Layout from \"../Layout/Layout\";\nimport styles from \"./App.module.css\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  render() {\n    return (\n      <Layout>\n        <section className={styles.section}>\n          <h1 className={styles.title}>Phonebook</h1>\n          <ContactForm />\n          <h2 className={styles.title}>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </section>\n      </Layout>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsAction from \"./contactsActions\";\n\nconst addContact = (state, action) => [...state, action.payload];\nconst removeContact = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\nconst items = createReducer([], {\n  [contactsAction.fetchContactSuccess]: (state, action) => action.payload,\n  [contactsAction.addContactSuccess]: addContact,\n  [contactsAction.removeContactSuccess]: removeContact\n});\n\nconst filter = createReducer(\"\", {\n  [contactsAction.changeFilter]: (state, action) => action.payload\n});\n\nconst loading = createReducer(false, {\n  [contactsAction.fetchContactRequest]: () => true,\n  [contactsAction.addContactRequest]: () => true,\n  [contactsAction.removeContactRequest]: () => true,\n\n  [contactsAction.addContactSuccess]: () => false,\n  [contactsAction.fetchContactSuccess]: () => false,\n  [contactsAction.removeContactSuccess]: () => false,\n\n  [contactsAction.addContactError]: () => false,\n  [contactsAction.fetchContactError]: () => false,\n  [contactsAction.removeContactError]: () => false\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducer\";\nimport logger from \"redux-logger\";\nconst getDefaultMD = getDefaultMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  },\n  middleware: [...getDefaultMD, logger]\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\";\nimport \"./css/main.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}