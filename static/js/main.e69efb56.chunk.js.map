{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/SwitchTheme/SwitchTheme.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactListButton/ContactListButton.module.css","components/ErrorBoundary/ErrorBoundary.module.css","components/ContactList/ContactList.module.css","components/Layout/Layout.module.css","redux/contacts/contactsSelectors.js","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/ContactListButton/ContactListButton.js","components/ContactListItem/ContactListItem.js","components/ErrorBoundary/ErrorBoundary.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/context/themeContext.js","components/SwitchTheme/SwitchTheme.js","components/hok/withTheme.js","components/Layout/Layout.js","components/App/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["module","exports","getContacts","state","contacts","phonebook","getFilter","filter","toLowerCase","getLoading","loading","getVisibleContacts","createSelector","contact","name","includes","getContactById","contactId","find","item","id","getError","error","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactRequest","fetchContactSuccess","fetchContactError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","headers","common","post","addContact","number","dispatch","contactsActions","then","data","catch","fetchContacts","get","removeContact","delete","ContactListButton","onRemoveContact","className","styles","contactButton","type","onClick","ContactListItem","keys","onRemove","contactItem","key","phone","defaultProps","connect","ownProps","contactsSelectors","contactsOperations","Error","errorMessage","message","ContactList","isLoadingContacts","isError","ErrorBoundary","color","height","width","timeout","contactList","map","ContactForm","handleChange","e","target","value","setState","hanleSubmit","preventDefault","props","onAddContact","this","form","onSubmit","formLabel","formInput","placeholder","onChange","required","formButton","Component","mapDispatchToProps","Filter","onChangeFilter","filterContainer","filterName","themeConfig","light","fontColor","bodyBg","dark","ThemeContext","React","createContext","SwitchTheme","onToggleTheme","themeSwitcher","label","switch","checked","slider","withTheme","WrappedComponent","theme","toggleTheme","bind","newTheme","Provider","toggle","Consumer","body","style","background","children","App","onFetchContacts","section","title","length","createReducer","contactsAction","action","payload","some","alert","combineReducers","getDefaultMD","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e69efb56.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"formButton\":\"ContactForm_formButton__2M3aA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"themeSwitcher\":\"SwitchTheme_themeSwitcher__1lDw4\",\"label\":\"SwitchTheme_label__WC0od\",\"themeSelector\":\"SwitchTheme_themeSelector__1B8O8\",\"switch\":\"SwitchTheme_switch__2BQnD\",\"slider\":\"SwitchTheme_slider__in4ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"filterName\":\"Filter_filterName__2ZMlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1YcTA\",\"section\":\"App_section__1zThd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__3Q33w\",\"phone\":\"ContactListItem_phone__XRgco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactButton\":\"ContactListButton_contactButton__1hXYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessage\":\"ErrorBoundary_errorMessage__6_h5l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3MzlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Layout_body__2WDWT\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = state => state.contacts.phonebook;\nconst getLoading = state => state.contacts.loading;\nconst getFilter = state => state.contacts.filter.toLowerCase();\nconst getError = state => state.contacts.error;\n\nconst getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (phonebook, filter) => {\n    return phonebook.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\nconst getContactById = createSelector(\n  [(state, contactId) => contactId, getContacts],\n  (contactId, phonebook) => phonebook.find(item => item.id === contactId)\n);\n\nexport default {\n  getLoading,\n  getVisibleContacts,\n  getFilter,\n  getContactById,\n  getError,\n  getContacts\n};\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst fetchContactRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactError = createAction(\"contacts/fetchError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeuccess\");\nconst removeContactError = createAction(\"contacts/removeError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  changeFilter\n};\n","import contactsActions from \"./contactsActions\";\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com/v1\";\naxios.defaults.headers.common[\"Authorization\"] =\n  \"1474f3f5-f023-4759-aec0-68582b03d82b\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nconst addContact = (name, number) => dispatch => {\n  dispatch(contactsActions.addContactRequest());\n  axios\n    .post(\"/contacts\", { name, number })\n    .then(({ data }) => {\n      dispatch(contactsActions.addContactSuccess(data));\n    })\n    .catch(error => dispatch(contactsActions.addContactError(error)));\n};\n\nconst fetchContacts = () => dispatch => {\n  dispatch(contactsActions.fetchContactRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(contactsActions.fetchContactSuccess(data)))\n    .catch(error => contactsActions.fetchContactError(error));\n};\n\nconst removeContact = id => dispatch => {\n  dispatch(contactsActions.removeContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch(error => dispatch(contactsActions.fetchContactError(error)));\n};\n\nexport default { addContact, fetchContacts, removeContact };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactListButton.module.css\";\n\nexport default function ContactListButton({ onRemoveContact }) {\n  return (\n    <button\n      className={styles.contactButton}\n      type=\"button\"\n      onClick={onRemoveContact}\n    ></button>\n  );\n}\n\nContactListButton.propTypes = {\n  onRemoveContact: PropTypes.func\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport styles from \"./ContactListItem.module.css\";\nimport ContactListButton from \"../ContactListButton/ContactListButton\";\n\nfunction ContactListItem({ name, number, keys, onRemove }) {\n  return (\n    <>\n      <li className={styles.contactItem} key={keys}>\n        {name}\n        <div>\n          <span className={styles.phone}> {number}</span>\n          <ContactListButton onRemoveContact={onRemove} />\n        </div>\n      </li>\n    </>\n  );\n}\n\nContactListItem.defaultProps = {\n  name: \"\",\n  phone: \"\",\n  keys: \"\"\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string,\n  phone: PropTypes.string,\n  keys: PropTypes.string,\n  onRemove: PropTypes.func\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const item = contactsSelectors.getContactById(state, ownProps.id);\n  return { ...item };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(contactsOperations.removeContact(ownProps.id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport styles from \"./ErrorBoundary.module.css\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nfunction Error({ error }) {\n  return <p className={styles.errorMessage}>{error.message}</p>;\n}\n\nError.defaultProps = {\n  message: \"Something went wrong...\"\n};\n\nError.propTypes = {\n  message: PropTypes.string\n};\nconst mapStateToProps = state => {\n  return {\n    error: contactsSelectors.getError(state)\n  };\n};\nexport default connect(mapStateToProps)(Error);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\nimport PropTypes from \"prop-types\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\nimport styles from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, isLoadingContacts, isError }) {\n  return (\n    <>\n      {isError && <ErrorBoundary />}\n      {isLoadingContacts && (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n          timeout={3000}\n        />\n      )}\n      <ul className={styles.contactList}>\n        {contacts.map(({ id }) => (\n          <ContactListItem key={id} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.defaultProps = {\n  contacts: []\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    contacts: contactsSelectors.getVisibleContacts(state),\n    isLoadingContacts: contactsSelectors.getLoading(state),\n    isError: contactsSelectors.getError(state)\n  };\n};\n\nexport default connect(mapStateToProps)(ContactList);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onAddContact: PropTypes.func\n  };\n  static defaultProps = {\n    onAddContact: () => {}\n  };\n\n  state = {\n    name: \"\",\n    phone: \"\"\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  hanleSubmit = e => {\n    e.preventDefault();\n    const { name, phone } = this.state;\n    this.props.onAddContact(name, phone);\n    this.setState({ name: \"\", phone: \"\" });\n  };\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.hanleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={name}\n            placeholder=\"Enter name\"\n            onChange={this.handleChange}\n            name=\"name\"\n            required\n          ></input>\n        </label>\n        <label className={styles.formLabel}>\n          Phone\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            value={phone}\n            placeholder=\"Enter phone\"\n            onChange={this.handleChange}\n            name=\"phone\"\n            required\n          ></input>\n        </label>\n        <button className={styles.formButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact\n};\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\nimport styles from \"./Filter.module.css\";\n\nfunction Filter({ value, onChangeFilter }) {\n  return (\n    <div className={styles.filterContainer}>\n      <label className={styles.filterName}>\n        Find contacts by name\n        <input\n          className={styles.filter}\n          type=\"text\"\n          value={value}\n          onChange={e => onChangeFilter(e.target.value)}\n        ></input>{\" \"}\n      </label>\n    </div>\n  );\n}\n\nFilter.defaultProps = {\n  value: \"\"\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChangeFilter: PropTypes.func\n};\n\nconst mapStateToProps = state => ({\n  value: contactsSelectors.getFilter(state)\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\n\nexport const themeConfig = {\n  light: {\n    fontColor: \"black\",\n    bodyBg: \"white\"\n  },\n  dark: {\n    fontColor: \"white\",\n    bodyBg: \"black\"\n  }\n};\n\nconst ThemeContext = React.createContext(themeConfig);\nexport default ThemeContext;\n","import React from \"react\";\nimport styles from \"./SwitchTheme.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst SwitchTheme = ({ onToggleTheme }) => {\n  return (\n    <div className={styles.themeSwitcher}>\n      <span className={styles.label}>Theme</span>\n      <label className={styles.switch}>\n        <input\n          type=\"checkbox\"\n          checked={styles.checked}\n          onChange={e => onToggleTheme(e.target.value)}\n        />\n        <span className={styles.slider}></span>\n      </label>\n    </div>\n  );\n};\nexport default SwitchTheme;\n\nSwitchTheme.propTypes = {\n  onToggleTheme: PropTypes.func\n};\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport { themeConfig } from \"../context/themeContext\";\n\nconst withTheme = WrappedComponent => {\n  return class withTheme extends Component {\n    constructor() {\n      super();\n      this.state = {\n        theme: \"light\"\n      };\n      this.toggleTheme = this.toggleTheme.bind(this);\n    }\n\n    toggleTheme(newTheme) {\n      this.setState({\n        theme: this.state.theme === \"dark\" ? \"light\" : \"dark\"\n      });\n    }\n\n    render() {\n      return (\n        <ThemeContext.Provider value={themeConfig[this.state.theme]}>\n          <WrappedComponent {...this.props} toggle={e => this.toggleTheme(e)} />\n        </ThemeContext.Provider>\n      );\n    }\n  };\n};\n\nexport default withTheme;\n","import React, { Component } from \"react\";\nimport ThemeContext from \"../context/themeContext\";\nimport SwitchTheme from \"../SwitchTheme/SwitchTheme\";\nimport withTheme from \"../hok/withTheme\";\nimport styles from \"./Layout.module.css\";\n\nclass Layout extends Component {\n  render() {\n    return (\n      <>\n        <ThemeContext.Consumer>\n          {theme => (\n            <div\n              className={styles.body}\n              style={{ color: theme.fontColor, background: theme.bodyBg }}\n            >\n              {this.props.toggle && (\n                <SwitchTheme onToggleTheme={e => this.props.toggle(e)} />\n              )}\n              {this.props.children}\n            </div>\n          )}\n        </ThemeContext.Consumer>\n      </>\n    );\n  }\n}\n\nexport default withTheme(Layout);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactList from \"../ContactList/ContactList\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport Layout from \"../Layout/Layout\";\nimport styles from \"./App.module.css\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n  render() {\n    return (\n      <Layout>\n        <section className={styles.section}>\n          <h1 className={styles.title}>Phonebook</h1>\n          <ContactForm />\n          <h2 className={styles.title}>Contacts</h2>\n          {this.props.contacts.length > 1 && <Filter />}\n          <ContactList />\n        </section>\n      </Layout>\n    );\n  }\n}\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts\n};\n\nconst mapStateToProps = state => {\n  return { contacts: contactsSelectors.getContacts(state) };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsAction from \"./contactsActions\";\n\nconst addContact = (state, action) => {\n  const isExist = state.some(contact => contact.name === action.payload.name);\n  if (isExist) {\n    alert(`${action.payload.name} is allready in contacts!`);\n    return [...state];\n  }\n  return [...state, action.payload];\n};\n\nconst removeContact = (state, action) =>\n  state.filter(contact => contact.id !== action.payload);\n\nconst phonebook = createReducer([], {\n  [contactsAction.fetchContactSuccess]: (state, action) => action.payload,\n  [contactsAction.addContactSuccess]: addContact,\n  [contactsAction.removeContactSuccess]: removeContact\n});\n\nconst filter = createReducer(\"\", {\n  [contactsAction.changeFilter]: (state, action) => action.payload\n});\n\nconst loading = createReducer(false, {\n  [contactsAction.fetchContactRequest]: () => true,\n  [contactsAction.addContactRequest]: () => true,\n  [contactsAction.removeContactRequest]: () => true,\n\n  [contactsAction.addContactSuccess]: () => false,\n  [contactsAction.fetchContactSuccess]: () => false,\n  [contactsAction.removeContactSuccess]: () => false,\n\n  [contactsAction.addContactError]: () => false,\n  [contactsAction.fetchContactError]: () => false,\n  [contactsAction.removeContactError]: () => false\n});\n\nconst error = createReducer(\"\", {\n  [contactsAction.fetchContactRequest]: () => \"\",\n  [contactsAction.addContactRequest]: () => \"\",\n  [contactsAction.removeContactRequest]: () => \"\",\n\n  [contactsAction.addContactError]: (state, action) => action.payload,\n  [contactsAction.fetchContactError]: (state, action) => action.payload,\n  [contactsAction.removeContactError]: (state, action) => action.payload\n});\n\nexport default combineReducers({\n  phonebook,\n  filter,\n  loading,\n  error\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducer\";\nimport logger from \"redux-logger\";\nconst getDefaultMD = getDefaultMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer\n  },\n  middleware: [...getDefaultMD, logger]\n});\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport store from \"./redux/store\";\nimport \"./css/main.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}